常用的一些命令：

管理已安装程序的通用命令：apt-get
查看已安装的软件包列表，输入：dpkg –list（退出终端输入q）
查看某个命令的具体功能和用法：man <命令名称>，如：man ls 
　　　　man ASCII

Linux文件系统是一个树形分层结构

pwd：显示当前位置
cd：切换位置/目录
　　cd / 为进入根目录“/”
	cd .. 为进入上一级目录

ls：查看某个目录下的内容：ls [选项] [目录名]（不输入目录名则默认为当前所在目录	
	常用选项：
	-a：不忽略（同时查看）以“ .”开头的文件
　　-l：显示文件的具体属性
　　-R：递归级显示（将目录文件中的子文件内容也显示出来）
　　常用目录：
　　/bin：系统的所有命令
	/boot：存放了系统启动时要用到的程序
	/dev：Linux系统中使用的外设
	/etc：存放了系统管理时要用的各种配置文件和子目录
	/lib：存放系统动态连接共享库
	/home：普通用户的主目录
	/root：根用户的主目录
	../：上级目录

查看文件内容（将文件内容打印到终端）：cat
如：cat test.c 后续可以编译运行代码：
　　gcc test.c 
　　./a.out
　　
　　cat -s test.c：将text.c中的多个空行合并成一个空行
　　cat -b test.c：加行号显示
　　nl test.c：加行号显示与cat -b一样
　　head -* test.c：显示test前 * 行内容
　　tail -* test.c：显示test倒数 * 行内容
　　
复制/拷贝命令：cp [options] <file> <destination>
	复制：cp test.c test1.c  （该目录下同时有test.c和test1.c）
	拷贝：cp test.c /home/linux
	复制文件夹时：cp -r 
		cp -r 原文件夹/ 新生成的拷贝文件夹
	复制多个文件到上一级目录：cp test1.c test2.c ../

移动/重命名命令：mv [options] <file> <destination>
　　重命名：cp test.c test1.c
　　移动：mv test.c ../
　　移动+重命名：mv test.c /home/linux/test_new.c

创建文件/更新文件时间戳：touch test.c
新建文件夹：mkdir [options] <新建文件夹>
　　级联创建 mkdir -p dir/demar  （dir文件夹中还有demar文件夹）
　　
删除文件：rm test.c [-i]
　　删除文件夹：rm -r dir/


最通用的编辑器（用于在终端改代码）：vi
https://blog.csdn.net/cyl101816/article/details/82026678
新建一个叫test的c语言文件：vi text.c

vi可以分为三种状态，分别是命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode），各模式的功能区分如下：

1.命令行模式
控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入插入模式（Insert mode）下，或者到 last line mode。
2.插入模式（Insert mode）
只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。
3.底行模式（last line mode）
将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等。
一般在使用时将底行模式（last line mode）也算入命令行模式command mode）。

编辑代码：
进入vi之后，是处于「命令行模式（command mode）」，要切换到「插入模式（Insert mode）」才能够编辑修改代码。
按 [ i ] 进入插入模式后是从光标当前位置开始输入文件；
按 [ a ]进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字
按 [ o ]进入插入模式后，在光标所在位置下一行插入新的一行
按 [ I ]（大写i）进入插入模式后，从该行行首开始输入（尤其适用于注释某行//）
按 [ A ]（大写a）进入插入模式后，从该行行末开始输入（在这一行后面加注释//）
按 [ O ]（大写o）进入插入模式后，在光标所在位置上一行插入新的一行


处于「插入模式（Insert mode）」，就只能一直输入文字，如果输错了字，想将该字删除，就要先按一下「ESC」键转到「命令行模式（command mode）」移动光标再删除文字。
「x」：每按一次，删除（剪切）光标所在位置的"后面"一个字符。
「#x」：例如，「6x」表示删除光标所在位置的"后面"6个字符。
「X」：大写的X，每按一次，删除光标所在位置的"前面"一个字符。
「#X」：例如，「20X」表示删除光标所在位置的"前面"20个字符。

「dd」：剪切光标所在行
「#dd」：从光标所在行开始剪切#行
「#yy」：从光标所在行开始复制#行
「y0」：将光标至行首的字符 复制
「y$」：将光标至行尾的字符 复制
「d0」：将光标至行首的字符 剪切
「d$」：将光标至行尾的字符 剪切

「p」：粘贴到后方
「P」：粘贴到前方
「u」：撤销上一次操作

退出vi及保存文件
在「命令行模式（command mode）」下，按一下「：」冒号键进入「Last line mode」
:w 保存文件但不退出
:w filename将当前版本的文件以文件名filename另存为
:wq 等价于 :x 保存并退出vi
:q! 不保存并退出
:! <命令>
如：:! pwd 查看当前文件的位置
	:! date 查看时间 
	:r main.c 将main.c文件的内容写入当前的文件



显示行号：在命令行模式（command mode）下输入 :set nu

光标操作
h、j、k、l 分别是← ↓ ↑ →
:# 移动光标到第#行
1G 移动光标到第一行
G 移动光标到最后一行
^ 移动光标到所在行行首
$ 移动光标到所在行行尾

索引：/<要索引的字符>
将光标放到第一行（1G），输入 /<要索引的字符>
n：向下继续查找
N：向上查找

替换：  :1,10s/oldstr/newstr/g
: [范围]s/oldstr/newstr/g  不输入范围默认当前行进行替换，不加/g只替换一个

常用范围	
.,$ 从当前行到最后一行，其中“.”代表当前行“$”代表最后一行  
1,$ 全文
% 全文

范围复制
: [范围]y
范围剪切
: [范围]d

